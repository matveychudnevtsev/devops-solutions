def allClusters = new HashSet()
allClusters.addAll(totalAS.keySet())
allClusters.addAll(testAS.keySet())
allClusters.addAll(prodAS.keySet())

// Преобразование в список и сортировка
def sortedClusters = new ArrayList(allClusters)
Collections.sort(sortedClusters, new Comparator() {
    int compare(a, b) {
        if (a == "" && b == "") return 0
        if (a == "") return 1
        if (b == "") return -1
        return a.compareTo(b)
    }
})

// Генерация содержимого таблицы
def tableContent = new StringBuilder()
tableContent.append("<tr><th>Кластер</th><th>Цель</th><th>IFT</th><th>ПРОМ</th></tr>")
sortedClusters.each { cluster ->
    def totalValue = totalAS.containsKey(cluster) ? totalAS[cluster] : 0
    def testValue = testAS.containsKey(cluster) ? testAS[cluster] : 0
    def prodValue = prodAS.containsKey(cluster) ? prodAS[cluster] : 0
    
    tableContent.append("<tr>")
    tableContent.append("<td>${cluster == '' ? 'Без кластера' : cluster}</td>")
    tableContent.append("<td>${totalValue}</td>")
    tableContent.append("<td>${testValue}</td>")
    tableContent.append("<td>${prodValue}</td>")
    tableContent.append("</tr>")
}
------

def allClusters = mapaPoAsClusters.keySet() + mapaPoAsClustersTest.keySet() + mapaPoAsClustersProm.keySet()

// Сортировка кластеров
def sortedClusters = allClusters.toList().sort { a, b ->
    if (a == "" && b == "") return 0
    if (a == "") return 1
    if (b == "") return -1
    return a.compareTo(b)
}

// Генерация содержимого таблицы
def tableContent = new StringBuilder()
tableContent.append("<tr><th>Кластер</th><th>Цель</th><th>IFT</th><th>ПРОМ</th></tr>")
sortedClusters.each { cluster ->
    def totalValue = mapaPoAsClusters.containsKey(cluster) ? mapaPoAsClusters[cluster] : 0
    def testValue = mapaPoAsClustersTest.containsKey(cluster) ? mapaPoAsClustersTest[cluster] : 0
    def prodValue = mapaPoAsClustersProm.containsKey(cluster) ? mapaPoAsClustersProm[cluster] : 0
    
    tableContent.append("<tr>")
    tableContent.append("<td>${cluster == '' ? 'Без кластера' : cluster}</td>")
    tableContent.append("<td>${totalValue}</td>")
    tableContent.append("<td>${testValue}</td>")
    tableContent.append("<td>${prodValue}</td>")
    tableContent.append("</tr>")
}
