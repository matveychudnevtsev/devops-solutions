def addAnnotationsToManifest(selectedManifest, envoyFilters) {
    // 1. Определение пользователя, который запустил джобу
    def jobUser = env.BUILD_USER ?: 'unknown_user'  // Получаем имя пользователя, который запустил джобу

    // 2. Получение текущего времени в формате с-м-ч-дд-мм-гггг
    def currentTime = new Date().format('ss-mm-HH-dd-MM-yyyy')

    // 3. Добавление аннотаций в каждый манифест
    selectedManifest.each { manifestName ->
        def updatedFilter = envoyFilters.items.find { it.metadata.name == manifestName }
        if (updatedFilter) {
            if (!updatedFilter.metadata.annotations) {
                updatedFilter.metadata.annotations = [:]  // Если аннотации отсутствуют, создаем их
            }
            // Добавляем аннотацию с именем пользователя
            updatedFilter.metadata.annotations["job-runner"] = jobUser
            // Добавляем аннотацию с временем запуска
            updatedFilter.metadata.annotations["job-run-time"] = currentTime
            log.infoCustom "Добавлены аннотации в манифест ${manifestName}: пользователь ${jobUser}, время ${currentTime}"
        }
    }
    log.infoCustom "Аннотации успешно добавлены во все измененные манифесты."
}



    if (currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause)) {
        jobUser = currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause).getUserName()
    }
